{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xampp\\\\htdocs\\\\demo_react\\\\todoList\\\\src\\\\components\\\\TodoList.js\";\nimport React, { memo, useState } from 'react';\nconst Todo = memo(props => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: `${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, !isEditing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"toggle\",\n    type: \"checkbox\",\n    checked: todo.isCompleted,\n    onChange: () => markCompleted(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    onDoubleClick: () => getEditTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, todo.text), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"destroy\",\n    onClick: () => removeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onBlur: onEditTodo,\n    onKeyPress: e => {\n      if (e.key === 'Enter' && text) {\n        onEditTodo();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }));\n});\nexport default TodoList;","map":{"version":3,"sources":["D:/Xampp/htdocs/demo_react/todoList/src/components/TodoList.js"],"names":["React","memo","useState","Todo","props","isEditing","todo","isCompleted","markCompleted","id","getEditTodo","text","removeTodo","e","setText","target","value","onEditTodo","key","TodoList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,MAAMC,IAAI,GAAGF,IAAI,CAACG,KAAK,IAAI;AACvB,sBACI;AAAI,IAAA,SAAS,EAAG,GAAEC,SAAS,GAAG,SAAH,GAAe,EAAG,IAAGC,IAAI,CAACC,WAAL,GAAmB,WAAnB,GAAiC,EAAG,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACF,SAAD,gBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,OAAO,EAAEC,IAAI,CAACC,WAHlB;AAII,IAAA,QAAQ,EAAE,MAAMC,aAAa,CAACF,IAAI,CAACG,EAAN,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAO,IAAA,aAAa,EAAE,MAAMC,WAAW,CAACJ,IAAI,CAACG,EAAN,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDH,IAAI,CAACK,IAAxD,CAPJ,eAQI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACN,IAAI,CAACG,EAAN,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,gBAWI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAEE,IAFX;AAGI,IAAA,QAAQ,EAAGE,CAAD,IAAOC,OAAO,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAH5B;AAII,IAAA,MAAM,EAAEC,UAJZ;AAKI,IAAA,UAAU,EAAGJ,CAAD,IAAO;AACf,UAAIA,CAAC,CAACK,GAAF,KAAU,OAAV,IAAqBP,IAAzB,EAA+B;AAC3BM,QAAAA,UAAU;AACb;AACJ,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbZ,CADJ;AA4BH,CA7BgB,CAAjB;AA8BA,eAAeE,QAAf","sourcesContent":["import React, { memo, useState } from 'react'\r\n\r\nconst Todo = memo(props => {\r\n    return (\r\n        <li className={`${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`}>\r\n            {\r\n                !isEditing ?\r\n                    <div className=\"view\">\r\n                        <input\r\n                            className=\"toggle\"\r\n                            type=\"checkbox\"\r\n                            checked={todo.isCompleted}\r\n                            onChange={() => markCompleted(todo.id)}\r\n                        />\r\n                        <label onDoubleClick={() => getEditTodo(todo.id)}>{todo.text}</label>\r\n                        <button className=\"destroy\" onClick={() => removeTodo(todo.id)} />\r\n                    </div> :\r\n                    <input\r\n                        className=\"edit\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        onBlur={onEditTodo}\r\n                        onKeyPress={(e) => {\r\n                            if (e.key === 'Enter' && text) {\r\n                                onEditTodo()\r\n                            }\r\n                        }}\r\n                    />\r\n            }\r\n        </li>\r\n    )\r\n})\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}