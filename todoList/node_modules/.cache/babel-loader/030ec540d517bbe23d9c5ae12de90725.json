{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xampp\\\\htdocs\\\\demo_react\\\\todoList\\\\src\\\\App.js\";\nimport React, { PureComponent } from 'react';\nimport TodoList from './components/TodoList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './css/Todo.css';\n\nconst fillterByStatus = (todos = [], status = '', id) => {\n  switch (status) {\n    case 'ACTIVE':\n      return todos.filter(todo => !todo.isCompleted);\n\n    case 'COMPLETE':\n      return todos.filter(todo => todo.isCompleted);\n\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== id);\n\n    default:\n      return todos;\n  }\n};\n\nclass App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listTodos: [{\n        id: 1,\n        text: 'todo1',\n        isCompleted: true\n      }, {\n        id: 2,\n        text: 'todo2',\n        isCompleted: false\n      }, {\n        id: 3,\n        text: 'todo3',\n        isCompleted: true\n      }],\n      todoEditingId: '',\n      isCheckedAll: false,\n      status: \"ALL\"\n    };\n\n    this.isNotCheckAll = (todos = []) => todos.find(todo => !todo.isCompleted);\n\n    this.addTodos = (todo = {}) => {\n      this.setState(preState => ({\n        listTodos: [...preState.listTodos, todo]\n      }));\n    };\n\n    this.getEditTodo = (id = '') => {\n      this.setState({\n        todoEditingId: id\n      });\n    };\n\n    this.onEditTodo = (todo = {}, index = -1) => {\n      if (index >= 0) {\n        const {\n          listTodos: list\n        } = this.state;\n        list.splice(index, 1, todo);\n        this.setState({\n          listTodos: list,\n          todoEditingId: ''\n        });\n      }\n    };\n\n    this.onChangeComplete = (id = '') => {\n      const {\n        listTodos\n      } = this.state;\n      const listUpdate = listTodos.map(todo => todo.id === id ? { ...todo,\n        isCompleted: !todo.isCompleted\n      } : todo);\n      this.setState(preState => ({\n        listTodos: listUpdate,\n        isCheckedAll: !this.isNotCheckAll(listUpdate)\n      }));\n    };\n\n    this.checkAllTodos = () => {\n      const {\n        listTodos,\n        isCheckedAll\n      } = this.state;\n      this.setState(preState => ({\n        listTodos: listTodos.map(todo => ({ ...todo,\n          isCompleted: !isCheckedAll\n        })),\n        isCheckedAll: !preState.isCheckedAll\n      }));\n    };\n\n    this.setStatusFilter = (status = '') => {\n      this.setState({\n        status: status\n      });\n    };\n\n    this.clearCompleted = () => {\n      const {\n        listTodos\n      } = this.state;\n      this.setState({\n        listTodos: fillterByStatus(listTodos, 'ACTIVE')\n      });\n    };\n\n    this.removeTodo = (id = '') => {\n      const {\n        listTodos\n      } = this.state;\n      this.setState({\n        listTodos: fillterByStatus(listTodos, 'REMOVE', id)\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      isCheckedAll: !this.isNotCheckAll(this.state.listTodos)\n    });\n  }\n\n  render() {\n    const {\n      listTodos,\n      todoEditingId,\n      isCheckedAll,\n      status\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todoapp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      addTodo: this.addTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      listTodos: fillterByStatus(listTodos, status),\n      getEditTodo: this.getEditTodo,\n      todoEditingId: todoEditingId,\n      onEditTodo: this.onEditTodo,\n      markComplete: this.onChangeComplete,\n      isCheckedAll: isCheckedAll,\n      checkAllTodos: this.checkAllTodos,\n      removeTodo: this.removeTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      status: status,\n      setStatusFilter: status => this.setState({\n        status\n      }),\n      clearCompleted: this.clearCompleted,\n      numOfTodos: listTodos.length,\n      numOfTodosLeft: fillterByStatus(listTodos, 'ACTIVE').length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;\nres.data.data.data.map(a => this.setState(preState => ({\n  dataCovid: [...preState.dataCovid, a]\n})));","map":{"version":3,"sources":["D:/Xampp/htdocs/demo_react/todoList/src/App.js"],"names":["React","PureComponent","TodoList","Header","Footer","fillterByStatus","todos","status","id","filter","todo","isCompleted","App","state","listTodos","text","todoEditingId","isCheckedAll","isNotCheckAll","find","addTodos","setState","preState","getEditTodo","onEditTodo","index","list","splice","onChangeComplete","listUpdate","map","checkAllTodos","setStatusFilter","clearCompleted","removeTodo","componentWillMount","render","length","res","data","a","dataCovid"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport TodoList from './components/TodoList'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\n\r\nimport './css/Todo.css'\r\n const fillterByStatus = (todos = [], status = '', id) => {\r\n        switch (status) {\r\n            case 'ACTIVE':\r\n                return todos.filter(todo => !todo.isCompleted)\r\n            case 'COMPLETE':\r\n                return todos.filter(todo => todo.isCompleted)\r\n            case 'REMOVE':\r\n                return todos.filter(todo => todo.id !== id)\r\n            default:\r\n                return todos;\r\n        }\r\n    }\r\nclass App extends PureComponent {\r\n    state = {\r\n        listTodos: [{\r\n            id: 1,\r\n            text: 'todo1',\r\n            isCompleted: true\r\n        },{\r\n            id: 2,\r\n            text: 'todo2',\r\n            isCompleted: false\r\n        },{\r\n            id: 3,\r\n            text: 'todo3',\r\n            isCompleted: true\r\n        }],\r\n        todoEditingId: '',\r\n        isCheckedAll : false,\r\n        status: \"ALL\"\r\n    }\r\n    \r\n    isNotCheckAll = (todos = []) => todos.find(todo=> !todo.isCompleted)\r\n    \r\n    componentWillMount(){\r\n        this.setState({isCheckedAll : !this.isNotCheckAll(this.state.listTodos)})\r\n    }\r\n    addTodos = (todo = {}) => {\r\n        this.setState(preState => ({\r\n          listTodos: [...preState.listTodos, todo]\r\n        }))\r\n    }\r\n\r\n    getEditTodo = (id = '') => {\r\n        this.setState({\r\n          todoEditingId: id\r\n        }\r\n       )\r\n    }\r\n    onEditTodo = (todo = {}, index = -1)=> {\r\n        if(index >= 0){\r\n            const {listTodos : list } = this.state\r\n            list.splice(index,1,todo)\r\n            this.setState({listTodos : list, todoEditingId : ''})\r\n        }\r\n    }\r\n    onChangeComplete = (id = '' ) =>{\r\n        const {listTodos} = this.state\r\n        const listUpdate = listTodos.map(todo => todo.id === id? ({...todo, isCompleted : !todo.isCompleted}) : todo)\r\n        this.setState(preState => ({\r\n            listTodos : listUpdate,\r\n            isCheckedAll : !this.isNotCheckAll(listUpdate)\r\n        }))\r\n    }\r\n    checkAllTodos = () => {\r\n        const {listTodos, isCheckedAll} = this.state\r\n        this.setState(preState => ({\r\n            listTodos: listTodos.map(todo => ({...todo, isCompleted : !isCheckedAll})),\r\n            isCheckedAll: !preState.isCheckedAll\r\n        }))\r\n    }\r\n\r\n    setStatusFilter = (status = '') => {\r\n        this.setState({\r\n            status : status\r\n        })\r\n    }\r\n\r\n    clearCompleted = () =>{\r\n        const {listTodos} = this.state\r\n        this.setState({\r\n            listTodos : fillterByStatus(listTodos, 'ACTIVE')\r\n        })\r\n    }\r\n    removeTodo = (id = '') =>{\r\n        const {listTodos} = this.state\r\n        this.setState({\r\n            listTodos : fillterByStatus(listTodos, 'REMOVE', id)\r\n        })\r\n    }\r\n    render() {\r\n        const { listTodos, todoEditingId, isCheckedAll, status} = this.state\r\n        return (\r\n        <div className=\"todoapp\">\r\n            <Header addTodo = {this.addTodos} />\r\n            <TodoList \r\n                listTodos = {fillterByStatus(listTodos, status)}\r\n                getEditTodo = {this.getEditTodo}\r\n                todoEditingId = {todoEditingId}\r\n                onEditTodo = {this.onEditTodo}\r\n                markComplete = {this.onChangeComplete}\r\n                isCheckedAll = {isCheckedAll}\r\n                checkAllTodos = {this.checkAllTodos}\r\n                removeTodo = {this.removeTodo }\r\n            />\r\n            <Footer \r\n                status = {status}\r\n                setStatusFilter = {(status) => this.setState({ status })} \r\n                clearCompleted = {this.clearCompleted}\r\n                numOfTodos = {listTodos.length}\r\n                numOfTodosLeft = {fillterByStatus(listTodos, 'ACTIVE').length}\r\n            />\r\n        </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\nres.data.data.data.map(a => this.setState(preState =>({\r\n    dataCovid: [...preState.dataCovid,a]\r\n})))"]},"metadata":{},"sourceType":"module"}