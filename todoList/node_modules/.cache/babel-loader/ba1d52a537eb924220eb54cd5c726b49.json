{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xampp\\\\htdocs\\\\demo_react\\\\todoList\\\\src\\\\components\\\\Todo.js\";\nimport React, { memo, useState } from 'react';\nconst Todo = memo(props => {\n  const {\n    todo,\n    getEditTodo,\n    todoEditingId,\n    onEditTodo,\n    markComplete,\n    removeTodo,\n    index\n  } = props;\n  const [text, setText] = useState(todo.text);\n  const isEditing = todoEditingId === todo.id;\n\n  const editTodo = () => {\n    onEditTodo({ ...todo,\n      text\n    }, index);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: `${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, !isEditing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"toggle\",\n    type: \"checkbox\",\n    checked: todo.isCompleted,\n    onChange: () => markComplete(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    onDoubleClick: e => getEditTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \" \", todo.text), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"destroy\",\n    onClick: () => removeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \" \")) : /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit\",\n    type: \"text\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onBlur: editTodo,\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        editTodo();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }));\n});\nexport default Todo;","map":{"version":3,"sources":["D:/Xampp/htdocs/demo_react/todoList/src/components/Todo.js"],"names":["React","memo","useState","Todo","props","todo","getEditTodo","todoEditingId","onEditTodo","markComplete","removeTodo","index","text","setText","isEditing","id","editTodo","isCompleted","e","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAqC,OAArC;AAEA,MAAMC,IAAI,GAAGF,IAAI,CAACG,KAAK,IAAI;AACvB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA,aAApB;AAAmCC,IAAAA,UAAnC;AAA+CC,IAAAA,YAA/C;AAA6DC,IAAAA,UAA7D;AAAyEC,IAAAA;AAAzE,MAAkFP,KAAxF;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACG,IAAI,CAACO,IAAN,CAAhC;AACA,QAAME,SAAS,GAAGP,aAAa,KAAKF,IAAI,CAACU,EAAzC;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnBR,IAAAA,UAAU,CAAC,EACP,GAAGH,IADI;AAEPO,MAAAA;AAFO,KAAD,EAGPD,KAHO,CAAV;AAIH,GALD;;AAMA,sBAEI;AAAI,IAAA,SAAS,EAAK,GAAEG,SAAS,GAAG,SAAH,GAAe,EAAG,IAAGT,IAAI,CAACY,WAAL,GAAmB,WAAnB,GAAiC,EAAG,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,CAACH,SAAD,gBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,UAA/B;AAA0C,IAAA,OAAO,EAAIT,IAAI,CAACY,WAA1D;AAAuE,IAAA,QAAQ,EAAI,MAAMR,YAAY,CAACJ,IAAI,CAACU,EAAN,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,aAAa,EAAKG,CAAC,IAAIZ,WAAW,CAACD,IAAI,CAACU,EAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuDV,IAAI,CAACO,IAA5D,CAFJ,eAGI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAI,MAAMF,UAAU,CAACL,IAAI,CAACU,EAAN,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CADF,gBAME;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,IAAI,EAAE,MAA9B;AACI,IAAA,KAAK,EAAIH,IADb;AACmB,IAAA,QAAQ,EAAIM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAD3C;AAEI,IAAA,MAAM,EAAIJ,QAFd;AAGI,IAAA,UAAU,EAAIE,CAAC,IAAI;AACf,UAAGA,CAAC,CAACG,GAAF,KAAU,OAAb,EAAqB;AACjBL,QAAAA,QAAQ;AACX;AACJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,CAFJ;AAuBH,CAjCgB,CAAjB;AAmCA,eAAeb,IAAf","sourcesContent":["import React, { memo, useState} from 'react'\r\n\r\nconst Todo = memo(props => { \r\n    const {todo, getEditTodo, todoEditingId, onEditTodo, markComplete, removeTodo, index} = props\r\n    const [text, setText] = useState(todo.text)\r\n    const isEditing = todoEditingId === todo.id\r\n    const editTodo = () => {\r\n        onEditTodo({\r\n            ...todo,\r\n            text\r\n        }, index)\r\n    }\r\n    return (\r\n       \r\n        <li className = {`${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`}>\r\n            { !isEditing ? \r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"checkbox\" checked = {todo.isCompleted} onChange = {() => markComplete(todo.id)} />\r\n                    <label onDoubleClick = { e => getEditTodo(todo.id)} > {todo.text}</label>\r\n                    <button className=\"destroy\" onClick = {() => removeTodo(todo.id)} > </button>\r\n                </div> :\r\n                <input className=\"edit\" type ='text' \r\n                    value = {text} onChange = {e => setText(e.target.value)} \r\n                    onBlur = {editTodo}\r\n                    onKeyPress = {e => {\r\n                        if(e.key === 'Enter'){\r\n                            editTodo()\r\n                        }\r\n                    }}\r\n                />\r\n            }\r\n        </li> \r\n          \r\n        \r\n    )\r\n})\r\n\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}