{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xampp\\\\htdocs\\\\demo_react\\\\todoList\\\\src\\\\components\\\\TodoList.js\";\nimport React, { memo } from 'react';\nimport Todo from './Todo';\nconst TodoList = memo(props => {\n  const {\n    listTodos,\n    getEditTodo,\n    todoEditingId,\n    onEditTodo,\n    markComplete,\n    isCheckedAll,\n    checkAllTodos,\n    removeTodo\n  } = props;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"toggle-all\",\n    type: \"checkbox\",\n    checked: isCheckedAll,\n    onChange: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"toggle-all\",\n    onClick: checkAllTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, listTodos.map((todo, index) => /*#__PURE__*/React.createElement(Todo, Object.assign({\n    todo\n  }, {\n    key: `todo${todo.id}`,\n    index: index,\n    getEditTodo: getEditTodo,\n    todoEditingId: todoEditingId,\n    onEditTodo: onEditTodo,\n    markComplete: markComplete,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })))));\n});\nexport default TodoList;","map":{"version":3,"sources":["D:/Xampp/htdocs/demo_react/todoList/src/components/TodoList.js"],"names":["React","memo","Todo","TodoList","props","listTodos","getEditTodo","todoEditingId","onEditTodo","markComplete","isCheckedAll","checkAllTodos","removeTodo","map","todo","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,KAAK,IAAI;AAC3B,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,aAAzB;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA,YAApD;AAAiEC,IAAAA,YAAjE;AAA+EC,IAAAA,aAA/E;AAA8FC,IAAAA;AAA9F,MAA4GR,KAAlH;AACA,sBACI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAG,UAArC;AAAgD,IAAA,OAAO,EAAIM,YAA3D;AAAyE,IAAA,QAAQ,EAAG,MAAM,CAAE,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,OAAO,EAAC,YAAf;AAA6B,IAAA,OAAO,EAAIC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,SAAS,CAACQ,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACd,oBAAC,IAAD,gBACQ;AAACD,IAAAA;AAAD,GADR;AAEI,IAAA,GAAG,EAAK,OAAMA,IAAI,CAACE,EAAG,EAF1B;AAGI,IAAA,KAAK,EAAID,KAHb;AAII,IAAA,WAAW,EAAIT,WAJnB;AAKI,IAAA,aAAa,EAAIC,aALrB;AAMI,IAAA,UAAU,EAAIC,UANlB;AAOI,IAAA,YAAY,EAAEC,YAPlB;AAQI,IAAA,UAAU,EAAGG,UARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,CAFJ,CAHJ,CADJ;AAsBH,CAxBoB,CAArB;AA0BA,eAAeT,QAAf","sourcesContent":["import React, { memo } from 'react'\r\nimport Todo from './Todo';\r\nconst TodoList = memo(props => {\r\n    const {listTodos, getEditTodo, todoEditingId, onEditTodo, markComplete,isCheckedAll, checkAllTodos, removeTodo} = props;\r\n    return (\r\n        <section className=\"main\">\r\n            <input className=\"toggle-all\" type = \"checkbox\" checked = {isCheckedAll} onChange ={() => {}}  />\r\n            <label htmlFor=\"toggle-all\"  onClick = {checkAllTodos}></label>\r\n            <ul className=\"todo-list\">\r\n            {\r\n                listTodos.map((todo, index) => \r\n                <Todo \r\n                    {...{todo}}\r\n                    key = {`todo${todo.id}`} \r\n                    index = {index} \r\n                    getEditTodo = {getEditTodo}\r\n                    todoEditingId = {todoEditingId}\r\n                    onEditTodo = {onEditTodo}\r\n                    markComplete={markComplete}\r\n                    removeTodo= {removeTodo}\r\n                />)\r\n            }\r\n            </ul>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}